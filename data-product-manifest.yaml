jobId: "1162"
jobName: Data-Quality-Check-Pipeline_push
jobType: Source Aligned Data Product
developerId: d4bb3e6c-47b4-4b96-b0cf-24ac4b9bd535
domain: business
alias: Load_to_postgres_push
discoveryPort:
  name: Data-Quality-Check-Pipeline_push
inputPorts:
  - alias: Postgres_Data_1_1
    isDynamic: true
    connection: Postgres Connection
    tableName/query: data_1
    optional:
      persistDataFrame: false
      enableDataReconciliation: false
      enforceSchema: false
      dataSetUrn: urn:dv:dataset:2a4d9b83-0e65-472a-9485-abb042427312
    type: readPostGreSqlDbUsingJdbc
productState:
  isDynamic: true
  alias: Load_to_postgres_push
  retentionVersions: ""
  logicalSchema:
    properties:
      Name:
        type: STRING
        description: Name of the user
        sourceColumn: Name
        sourceTable: public.data_1
      Age:
        type: STRING
        description: Age of the user
        sourceColumn: Age
        sourceTable: public.data_1
      City:
        type: STRING
        description: Location of the user
        sourceColumn: City
        sourceTable: public.data_1
      Occupation:
        type: STRING
        description: Occupation of the user
        sourceColumn: Occupation
        sourceTable: public.data_1
  stateStoreType: writeDataFrameToPostgresTable
  isProfilingEnabled: true
  updateStrategy: Overwrite
  connection: Postgres Connection
  tableName: quality_check_test
  optional:
    persistDataFrame: false
    enableDataReconciliation: true
    enforceSchema: true
    loggingOptions:
      printSchema: true
      count: true
      showData: true
  refreshInterval: None
transformation:
  - isDynamic: true
    alias: Spark_SQL_2
    description: Copy all data push
    sequence: 2
    inputDataFrameList:
      - inputDataFrame: Postgres_Data_1_1
        tempViewName: temp
    query: select * from temp
    optional:
      persistDataFrame: false
    type: operationThroughSqlQuery
controlPort:
  dataQualityRules:
    RecordCountCheck:
      productState:
        expression: ">="
        number: 100
        referenceAlias: Load_to_postgres_push
    NullValueCheck:
      productState:
        checks:
          - column: Name
            expression: ">="
            number: 0
        referenceAlias: Load_to_postgres_push
    NullCombinationCheck:
      productState:
        checks:
          - columns:
              - Name
            expression: <=
            number: 0.1
        referenceAlias: Load_to_postgres_push
    UniquenessCheck:
      productState:
        checks:
          - column: "Age "
          - column: Name
        referenceAlias: Load_to_postgres_push
    UniqueCombinationCheck:
      productState:
        checks:
          - columns:
              - Name
        referenceAlias: Load_to_postgres_push
    DistinctValueCountCheck:
      productState:
        checks:
          - column: Name
            expression: ">="
            number: 200
        referenceAlias: Load_to_postgres_push
    UnacceptableTextValueCheck:
      productState:
        checks:
          - column: Name
            valueList:
              - Alice
              - Bob
            expression: ==
        referenceAlias: Load_to_postgres_push
